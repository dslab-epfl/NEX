#include "places.hh"
Place<token_class_abirrs> d0_mem_write_req_get_0("d0_mem_write_req_get_0");
Place<> d0_mem_write_SINK("d0_mem_write_SINK");
Place<token_class_ddopst> d1_reqbuf("d1_reqbuf");
Place<token_class_ddoppst> root_sendbuf_1("root_sendbuf_1");
Place<> root_recvcap_1("root_recvcap_1");
Place<token_class_ddopst> d1_reqbuf_post("d1_reqbuf_post");
Place<> d1_reqbuf_post_cap("d1_reqbuf_post_cap");
Place<token_class_ddoppst> root_sendbuf_0("root_sendbuf_0");
Place<token_class_ddopst> d1_reqbuf_nonpost("d1_reqbuf_nonpost");
Place<> d1_reqbuf_nonpost_cap("d1_reqbuf_nonpost_cap");
Place<token_class_ddopst> d0_recvreq("d0_recvreq");
Place<token_class_idx> root_tmpbuf_to_sendbuf_1_pidx("root_tmpbuf_to_sendbuf_1_pidx");
Place<token_class_ddopst> d1_recv("d1_recv");
Place<token_class_ddopst> d1_P2P_root_tlp("d1_P2P_root_tlp");
Place<> d1_recvcap("d1_recvcap");
Place<token_class_ddopst> d1_reqbuf_cmpl("d1_reqbuf_cmpl");
Place<> d1_P2P_root_linkbuf("d1_P2P_root_linkbuf");
Place<> d1_reqbuf_cmpl_cap("d1_reqbuf_cmpl_cap");
Place<token_class_ddopst> d0_reqbuf("d0_reqbuf");
Place<token_class_ddopst> d0_P2P_root_tlp("d0_P2P_root_tlp");
Place<> d0_P2P_root_linkbuf("d0_P2P_root_linkbuf");
Place<token_class_ddopst> d0_reqbuf_post("d0_reqbuf_post");
Place<token_class_ddopst> root_tmpbuf_0_1("root_tmpbuf_0_1");
Place<> d1_reqbuf_cap("d1_reqbuf_cap");
Place<> d0_reqbuf_post_cap("d0_reqbuf_post_cap");
Place<token_class_abirrs> d0_mem_read_recv_buf("d0_mem_read_recv_buf");
Place<token_class_ddopst> d0_reqbuf_nonpost("d0_reqbuf_nonpost");
Place<> d0_reqbuf_nonpost_cap("d0_reqbuf_nonpost_cap");
Place<token_class_abirrs> d0_resp_buf("d0_resp_buf");
Place<token_class_ddopst> d0_recv("d0_recv");
Place<token_class_abirrs> d0_mem_write_recv_buf("d0_mem_write_recv_buf");
Place<token_class_ddopst> d0_reqbuf_cmpl("d0_reqbuf_cmpl");
Place<> d0_recvcap("d0_recvcap");
Place<> d1_P2P_root_outbuf("d1_P2P_root_outbuf");
Place<> d0_reqbuf_cmpl_cap("d0_reqbuf_cmpl_cap");
Place<> d0_P2P_root_outbuf("d0_P2P_root_outbuf");
Place<token_class_idx> root_tmpbuf_to_sendbuf_0_pidx("root_tmpbuf_to_sendbuf_0_pidx");
Place<token_class_ddopst> root_P2P_d1_tlp("root_P2P_d1_tlp");
Place<> d0_reqbuf_cap("d0_reqbuf_cap");
Place<> root_P2P_d1_linkbuf("root_P2P_d1_linkbuf");
Place<token_class_idx> d1_pidx("d1_pidx");
Place<token_class_ddopst> root_P2P_d0_tlp("root_P2P_d0_tlp");
Place<> root_P2P_d0_linkbuf("root_P2P_d0_linkbuf");
Place<token_class_ddopst> d1_recvcmpl("d1_recvcmpl");
Place<> root_P2P_d1_outbuf("root_P2P_d1_outbuf");
Place<token_class_ddopst> root_recv_1("root_recv_1");
Place<> root_recvcap_0("root_recvcap_0");
Place<> d1_recvreq("d1_recvreq");
Place<token_class_abirrs> d0_mem_read_req_put_0("d0_mem_read_req_put_0");
Place<> root_P2P_d0_outbuf("root_P2P_d0_outbuf");
Place<token_class_idx> d0_pidx("d0_pidx");
Place<> d0_mem_read_send_cap("d0_mem_read_send_cap");
Place<token_class_ddopst> root_recv_0("root_recv_0");
Place<token_class_abirrs> d0_mem_read_req_get_0("d0_mem_read_req_get_0");
Place<> d0_mem_read_SINK("d0_mem_read_SINK");
Place<token_class_ddopst> root_tmpbuf_1_0("root_tmpbuf_1_0");
Place<> d0_recvcmpl("d0_recvcmpl");
Place<token_class_abirrs> d0_mem_write_req_put_0("d0_mem_write_req_put_0");
Place<> d0_mem_write_send_cap("d0_mem_write_send_cap");
Place<> d0_mem_req_max_inflight("d0_mem_req_max_inflight");